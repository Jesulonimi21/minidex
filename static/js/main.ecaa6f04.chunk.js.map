{"version":3,"sources":["logo.svg","screens/ApSales.js","screens/Home.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","marginTop","marginLeft","marginRight","paper","padding","spacing","textAlign","color","palette","text","secondary","height","display","flexDirection","alignItems","position","typohraphy","fontSize","horDiv","justifyContent","buttonDiv","width","progress","top","left","ApSales","neilBerloufa","sarahLosena","aliceBucknell","juanCoveli","alexandra","amandaRoss","hiradSab","epochBase64Address","useState","P1Loading","setP1Loading","P2Loading","setP2Loading","P3Loading","setP3Loading","P4Loading","setP4Loading","P5Loading","setP5Loading","P6Loading","setP6Loading","P7Loading","setP7Loading","D1Visible","setD1Visible","D1Text","setD1Text","D1Title","setD1Title","handleCloseD1","D2Visible","setD2Visible","D2Text","setD2Text","D2Title","setD2Title","handleCloseD2","D3Visible","setD3Visible","D3Text","setD3Text","D3Title","setD3Title","handleCloseD3","D4Visible","setD4Visible","D4Text","setD4Text","D4Title","setD4Title","handleCloseD4","D5Visible","setD5Visible","D5Text","setD5Text","D5Title","setD5Title","handleCloseD5","D6Visible","setD6Visible","D6Text","setD6Text","D6Title","setD6Title","handleCloseD6","D7Visible","setD7Visible","D7Text","setD7Text","D7Title","setD7Title","handleCloseD7","program","Uint8Array","Buffer","from","lsig","algosdk","makeLogicSig","addresses","myalgoconnect","MyAlgoConnect","assetIds","applicationId","token","client","Algodv2","classes","Indexer","className","Grid","container","item","xs","Paper","elevation","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","autoFocus","CircularProgress","Typography","variant","style","wordWrap","inline","connectToWallet","a","Promise","resolve","reject","connect","isConnected","length","addr","console","log","error","getTransactionParams","do","params","appCallTxn","makeApplicationCallTransaction","address","zeroSendTxn","sendFunds","assetSendTxn","sendAsset","txns","groupId","computeGroupID","map","el","group","signedTxn0","signLogicSigTransaction","signedTxns","signTransaction","JSON","stringify","blobs","index","blob","signedTest","txTest","sendRawTransaction","txId","undefined","sender","appId","appArgs","type","appOnComplete","appIndex","fee","flatFee","receiver","amount","to","note","assetID","revocationTarget","recipient","units","algodClient","xtxn","makeAssetTransferTxnWithSuggestedParams","Home","menuButton","title","list","fullList","App","props","anchor","history","useHistory","React","bottom","right","state","setState","pageTitle","setPageTitle","toggleDrawer","event","key","AppBar","Toolbar","IconButton","edge","Drawer","role","onKeyDown","List","ListItem","button","push","ListItemIcon","ListItemText","primary","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecaa6f04.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\nimport {Button,Typography,CircularProgress,LinearProgress} from '@material-ui/core';\nimport {Grid} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport algosdk from 'algosdk';\nimport MyAlgoConnect from '@randlabs/myalgo-connect';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { Buffer } from 'buffer';\n\n\nfunction ApSales(){\nlet neilBerloufa= [\"Neil Beloufa\",\"YGCKHAG4H3WDUQSAY5J4MK5ZIWLGIF7W6ZYO5EZY3OGZJB5FWGDNBX7BUA\"];\nlet sarahLosena=[\"Sarah Rosalena Brady\",\"IKEPBSW7RSPN4TXYC3AV6FOOGZ6PJLTJKEB2PVCTPSRFNB3CANZ5JJRZPY\"];\nlet aliceBucknell=[\"Alice Bucknell\",\"2FSBHE3XAXJHBFFUABPPBBU3ZL4PQAHI6BB3KTHJKL5IZCC7BG4LR6GRT4\"];\nlet juanCoveli=[\"Juan Covelli\",\"UONII5HLZPHGDCBCETVTFGX42I5MJWEYKM5NUIFQW3A47CSDIHZN74AYUA\"];\nlet alexandra=[\"Alexandra Koumantaki\",\"EMMEIOWLZPMUCXSLGB5QOR33HCQZAQT6KSRGCXHBO54W7LNLQCJXSGJ4IQ\"];\nlet amandaRoss=[\"Amanda Ross Ho\",\"UNH443RNFL4NWFCP5AI3N34C6IK6SWDEPZRLFKXGWYTXBZ5BTLJJLGWLRQ\"];\nlet hiradSab=[\"Hirad Sab\",\"QPNWTRS3FLRUICYYLVPQV7QZIJPBNM2EV6S5BF6JOFQL7DGCLU5HKQSUK4\"];\n\nlet epochClawedBackAddress = \"CZJCFCUDUL5GU5IIIADMA4XBDTJEG6JZG5MBYKBTP4NQCFTOT4PDSDN6QU\"\nlet epochBase64Address = \"AyADkE4GgtaLdTMAIDIDEjMBIDIDEhAzAiAyAxIQMwAJMgMSEDMBCTIDEhAzAgkyAxIQMwAVMgMSEDMBFTIDEhAzAhUyAxIQMQEiDhAzAhAjEhAzAhgkEhA=\";\n\nlet[P1Loading,setP1Loading] = useState(false);\nlet[P2Loading,setP2Loading] = useState(false);\nlet[P3Loading,setP3Loading] = useState(false);\nlet[P4Loading,setP4Loading] = useState(false);\nlet[P5Loading,setP5Loading] = useState(false);\nlet[P6Loading,setP6Loading] = useState(false);\nlet[P7Loading,setP7Loading] = useState(false);\n\nlet[D1Visible,setD1Visible] = useState(false);\nlet[D1Text,setD1Text] = useState(\"D1 Text\");\nlet[D1Title,setD1Title]= useState(\"D1 Title\");\nlet handleCloseD1=()=>{\n    setD1Visible(false)\n}\n\n\nlet[D2Visible,setD2Visible] = useState(false);\nlet[D2Text,setD2Text] = useState(\"D1 Text\");\nlet[D2Title,setD2Title]= useState(\"D1 Title\");\nlet handleCloseD2=()=>{\n    setD2Visible(false)\n}\n\n\nlet[D3Visible,setD3Visible] = useState(false);\nlet[D3Text,setD3Text] = useState(\"D1 Text\");\nlet[D3Title,setD3Title]= useState(\"D1 Title\");\nlet handleCloseD3=()=>{\n    setD3Visible(false)\n}\n\n\nlet[D4Visible,setD4Visible] = useState(false);\nlet[D4Text,setD4Text] = useState(\"D1 Text\");\nlet[D4Title,setD4Title]= useState(\"D1 Title\");\nlet handleCloseD4=()=>{\n    setD4Visible(false)\n}\n\n\nlet[D5Visible,setD5Visible] = useState(false);\nlet[D5Text,setD5Text] = useState(\"D1 Text\");\nlet[D5Title,setD5Title]= useState(\"D1 Title\");\nlet handleCloseD5=()=>{\n    setD5Visible(false)\n}\n\n\nlet[D6Visible,setD6Visible] = useState(false);\nlet[D6Text,setD6Text] = useState(\"D1 Text\");\nlet[D6Title,setD6Title]= useState(\"D1 Title\");\nlet handleCloseD6=()=>{\n    setD6Visible(false)\n}\n\nlet[D7Visible,setD7Visible] = useState(false);\nlet[D7Text,setD7Text] = useState(\"D1 Text\");\nlet[D7Title,setD7Title]= useState(\"D1 Title\");\nlet handleCloseD7=()=>{\n    setD7Visible(false)\n}\n\n\n\n\n\n\n\n\nlet program = new Uint8Array(Buffer.from(epochBase64Address,\"base64\"))\nconst lsig = algosdk.makeLogicSig(program);   \n// let [addresses, setAddresses] =useState([]);\nlet addresses =[];\nlet myalgoconnect = new MyAlgoConnect();\nlet assetIds = [245558023,245558024,245558025,245558026,245558027,245558028,245558029,245558030]\nlet applicationId = 245558018;\nconst token = { 'X-API-Key':'ADRySlL0NK5trzqZGAE3q1xxIqlQdSfk1nbHxTNe'};\nconst server = \"https://mainnet-algorand.api.purestake.io/ps2\";\nconst baseServer = \"https://mainnet-algorand.api.purestake.io/idx2\";\nconst port = '';\nconst client = new algosdk.Algodv2(token, server, port);\nlet indexerClient = new algosdk.Indexer(token, baseServer, port);\n\n    const classes = useStyles();\n    return(\n        <div className={classes.root}>\n            <Grid container spacing={3} >\n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                        <Dialog\n                            open={D1Visible}\n                            onClose={handleCloseD1}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\">\n\n                            <DialogTitle id=\"alert-dialog-title\">{D1Title}</DialogTitle>\n                            <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">{D1Text}</DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                            <Button onClick={handleCloseD1} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleCloseD1} color=\"primary\" autoFocus>\n                                Ok\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    {P1Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                    <Typography className={classes.typohraphy}>Name: {neilBerloufa[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{neilBerloufa[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 1/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\" onClick={sendEdition1}>Send Epoch edition 1</Button>\n                    </div>\n                </Paper>\n                </Grid>\n            \n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                <Dialog\n                            open={D2Visible}\n                            onClose={handleCloseD2}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\">\n\n                            <DialogTitle id=\"alert-dialog-title\">{D2Title}</DialogTitle>\n                            <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">{D2Text}</DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                            <Button onClick={handleCloseD2} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleCloseD2} color=\"primary\" autoFocus>\n                                Ok\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                    {P2Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                {P2Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                <Typography className={classes.typohraphy}>Name: {sarahLosena[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{sarahLosena[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 2/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\" onClick={sendEdition2}>Send Epoch edition 2</Button>\n                    </div>\n                </Paper>\n                </Grid>\n\n                \n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                <Dialog\n                            open={D3Visible}\n                            onClose={handleCloseD3}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\">\n\n                            <DialogTitle id=\"alert-dialog-title\">{D3Title}</DialogTitle>\n                            <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">{D3Text}</DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                            <Button onClick={handleCloseD3} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleCloseD3} color=\"primary\" autoFocus>\n                                Ok\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                \n                {P3Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                <Typography className={classes.typohraphy}>Name: {aliceBucknell[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{aliceBucknell[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 3/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\" onClick={sendEdition3}>Send Epoch edition 3</Button>\n                    </div>\n                </Paper>\n                </Grid>\n               \n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                    <Dialog\n                                open={D4Visible}\n                                onClose={handleCloseD4}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\">\n\n                                <DialogTitle id=\"alert-dialog-title\">{D4Title}</DialogTitle>\n                                <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">{D4Text}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                <Button onClick={handleCloseD4} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={handleCloseD4} color=\"primary\" autoFocus>\n                                    Ok\n                                </Button>\n                                </DialogActions>\n                            </Dialog>\n\n\n                {P4Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                    <Typography className={classes.typohraphy}>Name: {juanCoveli[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{juanCoveli[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 4/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\" onClick={sendEdition4}>Send Epoch edition 4</Button>\n                    </div>\n                </Paper>\n                </Grid>\n            \n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n\n                <Dialog\n                            open={D5Visible}\n                            onClose={handleCloseD5}\n                            aria-labelledby=\"alert-dialog-title\"\n                            aria-describedby=\"alert-dialog-description\">\n\n                            <DialogTitle id=\"alert-dialog-title\">{D5Title}</DialogTitle>\n                            <DialogContent>\n                            <DialogContentText id=\"alert-dialog-description\">{D5Text}</DialogContentText>\n                            </DialogContent>\n                            <DialogActions>\n                            <Button onClick={handleCloseD5} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button onClick={handleCloseD5} color=\"primary\" autoFocus>\n                                Ok\n                            </Button>\n                            </DialogActions>\n                        </Dialog>\n\n                {P5Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                <Typography className={classes.typohraphy}>Name:{alexandra[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{alexandra[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 5/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\"  onClick={sendEdition5}>Send Epoch edition 5</Button>\n                    </div>\n                </Paper>\n                </Grid>\n\n                \n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                <Dialog\n                                open={D6Visible}\n                                onClose={handleCloseD6}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\">\n\n                                <DialogTitle id=\"alert-dialog-title\">{D6Title}</DialogTitle>\n                                <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">{D6Text}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                <Button onClick={handleCloseD6} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={handleCloseD6} color=\"primary\" autoFocus>\n                                    Ok\n                                </Button>\n                                </DialogActions>\n                            </Dialog>\n                {P6Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                <Typography className={classes.typohraphy}>Name: {amandaRoss[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address: </Typography>\n                    <Typography inline variant=\"subtitle1\" className={classes.typohraphy} style={{ wordWrap: \"break-word\",width:\"480px\" }}>{amandaRoss[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 6/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\"  onClick={sendEdition6}>Send Epoch edition 6</Button>\n                    </div>\n                </Paper>\n                </Grid>\n\n                <Grid item xs ={4}>\n                <Paper  elevation={3} className={classes.paper}>\n                <Dialog\n                                open={D7Visible}\n                                onClose={handleCloseD7}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\">\n\n                                <DialogTitle id=\"alert-dialog-title\">{D7Title}</DialogTitle>\n                                <DialogContent>\n                                <DialogContentText id=\"alert-dialog-description\">{D7Text}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                <Button onClick={handleCloseD7} color=\"primary\">\n                                    Cancel\n                                </Button>\n                                <Button onClick={handleCloseD7} color=\"primary\" autoFocus>\n                                    Ok\n                                </Button>\n                                </DialogActions>\n                            </Dialog>\n                {P7Loading? <CircularProgress color=\"primary\" className={classes.progress}/>:null}\n                <Typography className={classes.typohraphy}>Name: {hiradSab[0]} </Typography>\n                    <div className={classes.horDiv}>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}>Address:  </Typography>\n                    <Typography variant=\"subtitle1\" className={classes.typohraphy}  style={{ wordWrap: \"break-word\",width:\"480px\" }}>{hiradSab[1]}</Typography>\n                    </div>\n                    <Typography className={classes.typohraphy}>Edition: Epoch 7/8</Typography>\n\n                    {/* <Typography variant=\"subtitle1\" className={classes.typohraphy}>Received : true</Typography> */}\n                    <div className={classes.buttonDiv}>\n                        <Button variant =\"contained\" color = \"primary\" onClick={sendEdition7}>Send Epoch edition 7</Button>\n                    </div>\n                </Paper>\n                </Grid>\n\n            </Grid>\n        </div>\n    );\n\n    async function connectToWallet(){\n        return new Promise(async(resolve,reject)=>{\n            let addresses;\n            try{\n                addresses = await myalgoconnect.connect();\n                resolve(addresses)\n            }catch(error){\n                reject(error);\n            }       \n        });\n     \n    }\n    async function isConnected(){\n        return new Promise(async(resolve,reject)=>{\n            if(addresses.length==0){\n                try{\n                   let addr =  await connectToWallet()\n                   addresses= addr;\n                   console.log(addr);\n                   resolve(true);\n                }catch(error){\n                 console.error(error);\n                  reject(false);    \n                } \n             }else{\n                  resolve(true);\n             }\n        })\n       \n    }\n\n    async function sendEdition1(){\n        setP1Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP1Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,neilBerloufa[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[0],addresses[0].address,neilBerloufa[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD1Title(\"An Error occurred\")\n        setD1Text(JSON.stringify(error));\n        setD1Visible(true);\n        setP1Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP1Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD1Title(\"Success\");\n            setD1Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD1Title(\"An Error occurred\")\n                setD1Text(JSON.stringify(error));\n                setD1Visible(true);\n                setP1Loading(false)\n                return;\n        }\n    }\n\n\n    async function sendEdition2(){\n        setP2Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP2Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,sarahLosena[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[1],addresses[0].address,sarahLosena[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD2Title(\"An Error occurred\")\n        setD2Text(JSON.stringify(error));\n        setD2Visible(true);\n        setP2Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP2Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD2Title(\"Success\");\n            setD2Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD2Title(\"An Error occurred\")\n                setD2Text(JSON.stringify(error));\n                setD2Visible(true);\n                setP2Loading(false);\n                return;\n        }\n\n    }\n\n\n    async function sendEdition3(){\n        setP3Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP3Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,aliceBucknell[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[2],addresses[0].address,aliceBucknell[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD3Title(\"An Error occurred\")\n        setD3Text(JSON.stringify(error));\n        setD3Visible(true);\n        setP3Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP3Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD3Title(\"Success\");\n            setD3Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD3Title(\"An Error occurred\")\n                setD3Text(JSON.stringify(error));\n                setD3Visible(true);\n                setP3Loading(false);\n                return;\n        }\n\n    }\n    async function sendEdition4(){\n        setP4Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP4Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,juanCoveli[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[3],addresses[0].address,juanCoveli[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD4Title(\"An Error occurred\")\n        setD4Text(JSON.stringify(error));\n        setD4Visible(true);\n        setP4Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP4Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD4Title(\"Success\");\n            setD4Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD4Title(\"An Error occurred\")\n                setD4Text(JSON.stringify(error));\n                setD4Visible(true);\n                setP4Loading(false);\n                return;\n        }\n\n\n    }\n    async function sendEdition5(){\n        setP5Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP5Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,alexandra[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[4],addresses[0].address,alexandra[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD5Title(\"An Error occurred\")\n        setD5Text(JSON.stringify(error));\n        setD5Visible(true);\n        setP5Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP5Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD5Title(\"Success\");\n            setD5Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD5Title(\"An Error occurred\")\n                setD5Text(JSON.stringify(error));\n                setD5Visible(true);\n                setP5Loading(false);\n                return;\n        }\n    }\n\n\n    async function sendEdition6(){\n        setP6Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP6Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,amandaRoss[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[5],addresses[0].address,amandaRoss[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD6Title(\"An Error occurred\")\n        setD6Text(JSON.stringify(error));\n        setD6Visible(true);\n        setP6Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP6Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD6Title(\"Success\");\n            setD6Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD6Title(\"An Error occurred\")\n                setD6Text(JSON.stringify(error));\n                setD6Visible(true);\n                setP6Loading(false);\n                return;\n        }\n    }\n\n\n\n\n\n    async function sendEdition7(){\n        setP7Loading(true);\n        let boolVal = await isConnected();\n        if(!boolVal){\n            setP7Loading(false);\n            return;\n        }\n        console.log(addresses);\n    \n        let params = await client.getTransactionParams().do();\n        let appCallTxn =  makeApplicationCallTransaction(addresses[0].address,applicationId,[],params);\n        let zeroSendTxn = sendFunds(addresses[0].address,hiradSab[1],0,params);\n        let assetSendTxn = sendAsset(assetIds[6],addresses[0].address,hiradSab[1],1,client,params);\n\n        console.log(appCallTxn);\n        console.log(zeroSendTxn);\n        console.log(assetSendTxn);\n\n        let txns = [assetSendTxn,zeroSendTxn,appCallTxn];\n        let groupId = algosdk.computeGroupID(txns);\n                txns = txns.map((el)=>{\n                el.group=groupId;\n                return el;\n                });\n\n    let signedTxn0 = algosdk.signLogicSigTransaction(txns[0], lsig)\n    let signedTxns ={};\n    try{\n        signedTxns =  await myalgoconnect.signTransaction([txns[1], txns[2]]);\n    }catch(error){\n        console.error(\"Error ocurred \", error);\n        // alert(error)\n        setD7Title(\"An Error occurred\")\n        setD7Text(JSON.stringify(error));\n        setD7Visible(true);\n        setP7Loading(false)\n    }\n   \n    let blobs = signedTxns.map((el,index)=>{\n        return el.blob\n    })\n\n    let signedTest = [signedTxn0.blob,...blobs];\n    console.log(signedTest)\n    let txTest={};\n    try{\n        txTest=(await client.sendRawTransaction(signedTest).do());\n        setP7Loading(false);\n        if(txTest.txId!=null&&txTest.txId!=undefined){\n            setD7Title(\"Success\");\n            setD7Text(`Transaction id: ${txTest.txId}`);\n        }\n      }catch(error){\n        console.error(\"Error ocurred \", error);\n                // alert(error)\n                setD7Title(\"An Error occurred\")\n                setD7Text(JSON.stringify(error));\n                setD7Visible(true);\n                setP7Loading(false);\n                return;\n        }\n    }\n\n    function makeApplicationCallTransaction(sender,appId,appArgs,params){\n        let txn = {\n            type: \"appl\",\n            appOnComplete: 0,\n            from: sender,\n            appIndex: appId,\n            fee: 1000,\n            flatFee: true,\n            ...params\n    };\n        return txn;\n    }\n\n    function sendFunds(sender,receiver,amount,params){\n        let    txn = {\n              ...params,\n              fee: 1000,\n              flatFee: true,\n              type: 'pay',\n              from: sender,\n              to:  receiver,\n              amount: amount,\n              note: new Uint8Array(Buffer.from('“FREEPORT” – featuring Neïl Beloufa, Sarah Rosalena Brady, Alice Bucknell, Juan Covelli, Alexandra Koumantaki, Amanda Ross-Ho, Hirad Sab\", 2001'))\n      };\n       \n          return txn;\n      }\n\n      function sendAsset(assetID,revocationTarget,recipient, units,algodClient,params){   \n\n       let closeRemainderTo = undefined;\n        //Amount of the asset to transfer\n       let  amount = units;\n\n        // signing and sending \"txn\" will send \"amount\" assets from \"sender\" to \"recipient\"\n        let xtxn = algosdk.makeAssetTransferTxnWithSuggestedParams(epochClawedBackAddress, recipient, closeRemainderTo, revocationTarget,\n                amount,  new Uint8Array(Buffer.from(\"FREEPORT” – featuring Neïl Beloufa, Sarah Rosalena Brady, Alice Bucknell, Juan Covelli, Alexandra Koumantaki, Amanda Ross-Ho, Hirad Sab\")), assetID, params);\n        let program = new Uint8Array(Buffer.from(epochBase64Address,\"base64\"))\n        const lsig = algosdk.makeLogicSig(program);   \n       console.log(lsig.address());\n        // let rawSignedTxn = algosdk.signLogicSigTransactionObject(xtxn, lsig)\n        return xtxn;\n    }\n    \n}\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      marginTop:20,\n      marginLeft:15,\n      marginRight:15\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n      height:300,\n      display:\"flex\",\n      flexDirection:\"column\",\n      alignItems:'flex-start',\n      position:'relative'\n    },\n    typohraphy:{\n        fontSize:\"1\",\n        color:\"#000\",\n        textAlign:'start',\n        marginTop:\"15px\"\n    },\n    horDiv:{\n        display:'flex',\n        flexDirection:'row',\n        justifyContent:'center'\n    },\n    buttonDiv:{\n        // border:\"solid 2px #000\",\n        width: \"100%\",\n        marginTop:\"20px\"\n    },\n    progress:{\n        display:'flex',\n        position:'absolute',\n        top:\"50%\",\n        left:'50%'\n\n    }\n  }));\nexport default ApSales;\n","import React from 'react';\n\nexport default function Home(){\n    return <div></div>\n}","\nimport logo from './logo.svg';\nimport './App.css';\nimport React  from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Button from '@material-ui/core/Button';\nimport Drawer from '@material-ui/core/Drawer';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport List from '@material-ui/core/List';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CartIcon from '@material-ui/icons/ShoppingCart';\nimport ApSales from './screens/ApSales';\nimport Home from './screens/Home';\n\nimport {BrowserRouter as Router,Switch,Route, useHistory} from 'react-router-dom';\n\nfunction App(props) {\n  const classes = useStyles();\n  let history = useHistory();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n  const [pageTitle, setPageTitle]= React.useState('Epoch Home');\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n  \n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor)=>{\n    return(<div className={classes.list}\n            role = \"presentation\"\n            onClick={toggleDrawer(anchor,false)}\n            onKeyDown={toggleDrawer(anchor,false)}>\n              \n              <List>\n                  <ListItem button key = \"Epoch Home\"\n                    onClick={(event)=>{setPageTitle(\"Epoch Home\"); history.push(\"/\")}}>\n                    <ListItemIcon>\n                      <HomeIcon />\n                      <ListItemText primary={\"Epoch Home\"} />\n                    </ListItemIcon>\n\n                  </ListItem>\n                  <ListItem button key = \"Epoch AP Sales\"\n                  onClick={(event)=>{\n                    setPageTitle(\"Epoch AP Sales\"); \n                    history.push(\"/apsales\")\n                  }}>\n                  <ListItemIcon>\n                      <CartIcon />\n                      <ListItemText primary={\"Epoch AP Sales\"} />\n                    </ListItemIcon>\n                  </ListItem>\n              </List>\n           </div>)\n  }\n  \n\n  return (\n    \n      <div className={classes.root}>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\n              onClick={(event)=>{setState({...state,left:true})}}>\n                <MenuIcon />\n              </IconButton>\n              <Typography variant=\"h6\" className={classes.title}>\n                {pageTitle}\n              </Typography>\n              <Button color=\"inherit\">Login</Button>\n            </Toolbar>\n          </AppBar>\n          <Drawer anchor={\"left\"} open={state.left} onClose={toggleDrawer(\"left\", false)}>\n          {list(\"left\")}\n        </Drawer>\n    \n        <Switch>\n            <Route path =\"/apsales\">\n              <ApSales/>\n            </Route>\n            <Route path = \"/\">\n              <Home/>\n            </Route>\n        </Switch>\n\n      </div>\n \n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  list: {\n    width: 250,\n  },\n  fullList: {\n    width: 'auto',\n  },\n}));\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}